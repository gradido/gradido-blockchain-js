/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG JSE (https://www.swig.org).
 * Version 5.0.3
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

#include "swig/gradido-blockchain-js.h"

/* Class: TransactionEntry (_exports_TransactionEntry) */
// jsnapi_getclass
Napi::Function _exports_TransactionEntry_inst::GetClass(Napi::Env env) {
  std::map<std::string, _exports_TransactionEntry_templ::PropertyDescriptor> members, staticMembers;
  GetMembers(env, members, staticMembers);
  
  std::vector<_exports_TransactionEntry_inst::PropertyDescriptor> symbolTable;
  for (auto it = members.begin(); it != members.end(); it++)
  symbolTable.push_back(it->second);
  for (auto it = staticMembers.begin(); it != staticMembers.end(); it++)
  symbolTable.push_back(it->second);
  
  return Napi::ObjectWrap<_exports_TransactionEntry_inst>::DefineClass(env, "TransactionEntry", symbolTable);
}

void _exports_TransactionEntry_inst::GetMembers(
  Napi::Env env,
  std::map<std::string, _exports_TransactionEntry_templ::PropertyDescriptor> &members,
  std::map<std::string, _exports_TransactionEntry_templ::PropertyDescriptor> &staticMembers
  ) {
  std::map<std::string, SWIG_NAPI_ObjectWrap_templ<SWIG_NAPI_ObjectWrap_inst>::PropertyDescriptor> baseMembers, baseStaticMembers;
  SWIG_NAPI_ObjectWrap_inst::GetMembers(env, baseMembers, baseStaticMembers);
  members.insert(baseMembers.begin(), baseMembers.end());
  staticMembers.insert(staticMembers.begin(), staticMembers.end());
  
  /* register wrapper functions */
  // jsnapi_register_member_function
  members.erase("lt");
  members.insert({
    "lt",
      _exports_TransactionEntry_templ::InstanceMethod("lt",
        &_exports_TransactionEntry_templ::_wrap_TransactionEntry_lt,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("gt");
  members.insert({
    "gt",
      _exports_TransactionEntry_templ::InstanceMethod("gt",
        &_exports_TransactionEntry_templ::_wrap_TransactionEntry_gt,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getTransactionNr");
  members.insert({
    "getTransactionNr",
      _exports_TransactionEntry_templ::InstanceMethod("getTransactionNr",
        &_exports_TransactionEntry_templ::_wrap_TransactionEntry_getTransactionNr,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getSerializedTransaction");
  members.insert({
    "getSerializedTransaction",
      _exports_TransactionEntry_templ::InstanceMethod("getSerializedTransaction",
        &_exports_TransactionEntry_templ::_wrap_TransactionEntry_getSerializedTransaction,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getConfirmedTransaction");
  members.insert({
    "getConfirmedTransaction",
      _exports_TransactionEntry_templ::InstanceMethod("getConfirmedTransaction",
        &_exports_TransactionEntry_templ::_wrap_TransactionEntry_getConfirmedTransaction,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getMonth");
  members.insert({
    "getMonth",
      _exports_TransactionEntry_templ::InstanceMethod("getMonth",
        &_exports_TransactionEntry_templ::_wrap_TransactionEntry_getMonth,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getYear");
  members.insert({
    "getYear",
      _exports_TransactionEntry_templ::InstanceMethod("getYear",
        &_exports_TransactionEntry_templ::_wrap_TransactionEntry_getYear,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getTransactionType");
  members.insert({
    "getTransactionType",
      _exports_TransactionEntry_templ::InstanceMethod("getTransactionType",
        &_exports_TransactionEntry_templ::_wrap_TransactionEntry_getTransactionType,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getCoinCommunityId");
  members.insert({
    "getCoinCommunityId",
      _exports_TransactionEntry_templ::InstanceMethod("getCoinCommunityId",
        &_exports_TransactionEntry_templ::_wrap_TransactionEntry_getCoinCommunityId,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getTransactionBody");
  members.insert({
    "getTransactionBody",
      _exports_TransactionEntry_templ::InstanceMethod("getTransactionBody",
        &_exports_TransactionEntry_templ::_wrap_TransactionEntry_getTransactionBody,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("isTransfer");
  members.insert({
    "isTransfer",
      _exports_TransactionEntry_templ::InstanceMethod("isTransfer",
        &_exports_TransactionEntry_templ::_wrap_TransactionEntry_isTransfer,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("isCreation");
  members.insert({
    "isCreation",
      _exports_TransactionEntry_templ::InstanceMethod("isCreation",
        &_exports_TransactionEntry_templ::_wrap_TransactionEntry_isCreation,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("isCommunityFriendsUpdate");
  members.insert({
    "isCommunityFriendsUpdate",
      _exports_TransactionEntry_templ::InstanceMethod("isCommunityFriendsUpdate",
        &_exports_TransactionEntry_templ::_wrap_TransactionEntry_isCommunityFriendsUpdate,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("isRegisterAddress");
  members.insert({
    "isRegisterAddress",
      _exports_TransactionEntry_templ::InstanceMethod("isRegisterAddress",
        &_exports_TransactionEntry_templ::_wrap_TransactionEntry_isRegisterAddress,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("isDeferredTransfer");
  members.insert({
    "isDeferredTransfer",
      _exports_TransactionEntry_templ::InstanceMethod("isDeferredTransfer",
        &_exports_TransactionEntry_templ::_wrap_TransactionEntry_isDeferredTransfer,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("isCommunityRoot");
  members.insert({
    "isCommunityRoot",
      _exports_TransactionEntry_templ::InstanceMethod("isCommunityRoot",
        &_exports_TransactionEntry_templ::_wrap_TransactionEntry_isCommunityRoot,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  
  /* add static class functions and variables */
  
  
#ifndef NAPI_CPP_EXCEPTIONS
  goto fail;
fail:
  return;
#endif
}

