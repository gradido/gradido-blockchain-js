/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG JSE (https://www.swig.org).
 * Version 5.0.3
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

#include "swig/gradido-blockchain-js.h"

/* Class: TransactionBody (_exports_TransactionBody) */
// jsnapi_getclass
Napi::Function _exports_TransactionBody_inst::GetClass(Napi::Env env) {
  std::map<std::string, _exports_TransactionBody_templ::PropertyDescriptor> members, staticMembers;
  GetMembers(env, members, staticMembers);
  
  std::vector<_exports_TransactionBody_inst::PropertyDescriptor> symbolTable;
  for (auto it = members.begin(); it != members.end(); it++)
  symbolTable.push_back(it->second);
  for (auto it = staticMembers.begin(); it != staticMembers.end(); it++)
  symbolTable.push_back(it->second);
  
  return Napi::ObjectWrap<_exports_TransactionBody_inst>::DefineClass(env, "TransactionBody", symbolTable);
}

void _exports_TransactionBody_inst::GetMembers(
  Napi::Env env,
  std::map<std::string, _exports_TransactionBody_templ::PropertyDescriptor> &members,
  std::map<std::string, _exports_TransactionBody_templ::PropertyDescriptor> &staticMembers
  ) {
  std::map<std::string, SWIG_NAPI_ObjectWrap_templ<SWIG_NAPI_ObjectWrap_inst>::PropertyDescriptor> baseMembers, baseStaticMembers;
  SWIG_NAPI_ObjectWrap_inst::GetMembers(env, baseMembers, baseStaticMembers);
  members.insert(baseMembers.begin(), baseMembers.end());
  staticMembers.insert(staticMembers.begin(), staticMembers.end());
  
  /* register wrapper functions */
  // jsnapi_register_member_function
  members.erase("isTransfer");
  members.insert({
    "isTransfer",
      _exports_TransactionBody_templ::InstanceMethod("isTransfer",
        &_exports_TransactionBody_templ::_wrap_TransactionBody_isTransfer,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("isCreation");
  members.insert({
    "isCreation",
      _exports_TransactionBody_templ::InstanceMethod("isCreation",
        &_exports_TransactionBody_templ::_wrap_TransactionBody_isCreation,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("isCommunityFriendsUpdate");
  members.insert({
    "isCommunityFriendsUpdate",
      _exports_TransactionBody_templ::InstanceMethod("isCommunityFriendsUpdate",
        &_exports_TransactionBody_templ::_wrap_TransactionBody_isCommunityFriendsUpdate,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("isRegisterAddress");
  members.insert({
    "isRegisterAddress",
      _exports_TransactionBody_templ::InstanceMethod("isRegisterAddress",
        &_exports_TransactionBody_templ::_wrap_TransactionBody_isRegisterAddress,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("isDeferredTransfer");
  members.insert({
    "isDeferredTransfer",
      _exports_TransactionBody_templ::InstanceMethod("isDeferredTransfer",
        &_exports_TransactionBody_templ::_wrap_TransactionBody_isDeferredTransfer,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("isCommunityRoot");
  members.insert({
    "isCommunityRoot",
      _exports_TransactionBody_templ::InstanceMethod("isCommunityRoot",
        &_exports_TransactionBody_templ::_wrap_TransactionBody_isCommunityRoot,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getTransactionType");
  members.insert({
    "getTransactionType",
      _exports_TransactionBody_templ::InstanceMethod("getTransactionType",
        &_exports_TransactionBody_templ::_wrap_TransactionBody_getTransactionType,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("isPairing");
  members.insert({
    "isPairing",
      _exports_TransactionBody_templ::InstanceMethod("isPairing",
        &_exports_TransactionBody_templ::_wrap_TransactionBody_isPairing,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("isInvolved");
  members.insert({
    "isInvolved",
      _exports_TransactionBody_templ::InstanceMethod("isInvolved",
        &_exports_TransactionBody_templ::_wrap_TransactionBody_isInvolved,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getTransferAmount");
  members.insert({
    "getTransferAmount",
      _exports_TransactionBody_templ::InstanceMethod("getTransferAmount",
        &_exports_TransactionBody_templ::_wrap_TransactionBody_getTransferAmount,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getInvolvedAddresses");
  members.insert({
    "getInvolvedAddresses",
      _exports_TransactionBody_templ::InstanceMethod("getInvolvedAddresses",
        &_exports_TransactionBody_templ::_wrap_TransactionBody_getInvolvedAddresses,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getMemo");
  members.insert({
    "getMemo",
      _exports_TransactionBody_templ::InstanceMethod("getMemo",
        &_exports_TransactionBody_templ::_wrap_TransactionBody_getMemo,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getCreatedAt");
  members.insert({
    "getCreatedAt",
      _exports_TransactionBody_templ::InstanceMethod("getCreatedAt",
        &_exports_TransactionBody_templ::_wrap_TransactionBody_getCreatedAt,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getVersionNumber");
  members.insert({
    "getVersionNumber",
      _exports_TransactionBody_templ::InstanceMethod("getVersionNumber",
        &_exports_TransactionBody_templ::_wrap_TransactionBody_getVersionNumber,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getType");
  members.insert({
    "getType",
      _exports_TransactionBody_templ::InstanceMethod("getType",
        &_exports_TransactionBody_templ::_wrap_TransactionBody_getType,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getOtherGroup");
  members.insert({
    "getOtherGroup",
      _exports_TransactionBody_templ::InstanceMethod("getOtherGroup",
        &_exports_TransactionBody_templ::_wrap_TransactionBody_getOtherGroup,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getTransfer");
  members.insert({
    "getTransfer",
      _exports_TransactionBody_templ::InstanceMethod("getTransfer",
        &_exports_TransactionBody_templ::_wrap_TransactionBody_getTransfer,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getCreation");
  members.insert({
    "getCreation",
      _exports_TransactionBody_templ::InstanceMethod("getCreation",
        &_exports_TransactionBody_templ::_wrap_TransactionBody_getCreation,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getCommunityFriendsUpdate");
  members.insert({
    "getCommunityFriendsUpdate",
      _exports_TransactionBody_templ::InstanceMethod("getCommunityFriendsUpdate",
        &_exports_TransactionBody_templ::_wrap_TransactionBody_getCommunityFriendsUpdate,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getRegisterAddress");
  members.insert({
    "getRegisterAddress",
      _exports_TransactionBody_templ::InstanceMethod("getRegisterAddress",
        &_exports_TransactionBody_templ::_wrap_TransactionBody_getRegisterAddress,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getDeferredTransfer");
  members.insert({
    "getDeferredTransfer",
      _exports_TransactionBody_templ::InstanceMethod("getDeferredTransfer",
        &_exports_TransactionBody_templ::_wrap_TransactionBody_getDeferredTransfer,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getCommunityRoot");
  members.insert({
    "getCommunityRoot",
      _exports_TransactionBody_templ::InstanceMethod("getCommunityRoot",
        &_exports_TransactionBody_templ::_wrap_TransactionBody_getCommunityRoot,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  
  /* add static class functions and variables */
  
  
#ifndef NAPI_CPP_EXCEPTIONS
  goto fail;
fail:
  return;
#endif
}

