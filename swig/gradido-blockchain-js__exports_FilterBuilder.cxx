/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG JSE (https://www.swig.org).
 * Version 5.0.3
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

#include "swig/gradido-blockchain-js.h"

/* Class: FilterBuilder (_exports_FilterBuilder) */
// jsnapi_getclass
Napi::Function _exports_FilterBuilder_inst::GetClass(Napi::Env env) {
  std::map<std::string, _exports_FilterBuilder_templ::PropertyDescriptor> members, staticMembers;
  GetMembers(env, members, staticMembers);
  
  std::vector<_exports_FilterBuilder_inst::PropertyDescriptor> symbolTable;
  for (auto it = members.begin(); it != members.end(); it++)
  symbolTable.push_back(it->second);
  for (auto it = staticMembers.begin(); it != staticMembers.end(); it++)
  symbolTable.push_back(it->second);
  
  return Napi::ObjectWrap<_exports_FilterBuilder_inst>::DefineClass(env, "FilterBuilder", symbolTable);
}

void _exports_FilterBuilder_inst::GetMembers(
  Napi::Env env,
  std::map<std::string, _exports_FilterBuilder_templ::PropertyDescriptor> &members,
  std::map<std::string, _exports_FilterBuilder_templ::PropertyDescriptor> &staticMembers
  ) {
  std::map<std::string, SWIG_NAPI_ObjectWrap_templ<SWIG_NAPI_ObjectWrap_inst>::PropertyDescriptor> baseMembers, baseStaticMembers;
  SWIG_NAPI_ObjectWrap_inst::GetMembers(env, baseMembers, baseStaticMembers);
  members.insert(baseMembers.begin(), baseMembers.end());
  staticMembers.insert(staticMembers.begin(), staticMembers.end());
  
  /* register wrapper functions */
  // jsnapi_register_member_function
  members.erase("reset");
  members.insert({
    "reset",
      _exports_FilterBuilder_templ::InstanceMethod("reset",
        &_exports_FilterBuilder_templ::_wrap_FilterBuilder_reset,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("setMinTransactionNr");
  members.insert({
    "setMinTransactionNr",
      _exports_FilterBuilder_templ::InstanceMethod("setMinTransactionNr",
        &_exports_FilterBuilder_templ::_wrap_FilterBuilder_setMinTransactionNr,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("setMaxTransactionNr");
  members.insert({
    "setMaxTransactionNr",
      _exports_FilterBuilder_templ::InstanceMethod("setMaxTransactionNr",
        &_exports_FilterBuilder_templ::_wrap_FilterBuilder_setMaxTransactionNr,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("setInvolvedPublicKey");
  members.insert({
    "setInvolvedPublicKey",
      _exports_FilterBuilder_templ::InstanceMethod("setInvolvedPublicKey",
        &_exports_FilterBuilder_templ::_wrap_FilterBuilder_setInvolvedPublicKey,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("setSearchDirection");
  members.insert({
    "setSearchDirection",
      _exports_FilterBuilder_templ::InstanceMethod("setSearchDirection",
        &_exports_FilterBuilder_templ::_wrap_FilterBuilder_setSearchDirection,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("setPagination");
  members.insert({
    "setPagination",
      _exports_FilterBuilder_templ::InstanceMethod("setPagination",
        &_exports_FilterBuilder_templ::_wrap_FilterBuilder_setPagination,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("setCoinCommunityId");
  members.insert({
    "setCoinCommunityId",
      _exports_FilterBuilder_templ::InstanceMethod("setCoinCommunityId",
        &_exports_FilterBuilder_templ::_wrap_FilterBuilder_setCoinCommunityId,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("setTimepointInterval");
  members.insert({
    "setTimepointInterval",
      _exports_FilterBuilder_templ::InstanceMethod("setTimepointInterval",
        &_exports_FilterBuilder_templ::_wrap_FilterBuilder_setTimepointInterval,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("setTransactionType");
  members.insert({
    "setTransactionType",
      _exports_FilterBuilder_templ::InstanceMethod("setTransactionType",
        &_exports_FilterBuilder_templ::_wrap_FilterBuilder_setTransactionType,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("build");
  members.insert({
    "build",
      _exports_FilterBuilder_templ::InstanceMethod("build",
        &_exports_FilterBuilder_templ::_wrap_FilterBuilder_build,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getFilter");
  members.insert({
    "getFilter",
      _exports_FilterBuilder_templ::InstanceMethod("getFilter",
        &_exports_FilterBuilder_templ::_wrap_FilterBuilder_getFilter,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  
  /* add static class functions and variables */
  
  
#ifndef NAPI_CPP_EXCEPTIONS
  goto fail;
fail:
  return;
#endif
}

