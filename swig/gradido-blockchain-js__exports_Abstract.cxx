/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG JSE (https://www.swig.org).
 * Version 5.0.3
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

#include "swig/gradido-blockchain-js.h"

/* Class: Abstract (_exports_Abstract) */
// jsnapi_getclass
Napi::Function _exports_Abstract_inst::GetClass(Napi::Env env) {
  std::map<std::string, _exports_Abstract_templ::PropertyDescriptor> members, staticMembers;
  GetMembers(env, members, staticMembers);
  
  std::vector<_exports_Abstract_inst::PropertyDescriptor> symbolTable;
  for (auto it = members.begin(); it != members.end(); it++)
  symbolTable.push_back(it->second);
  for (auto it = staticMembers.begin(); it != staticMembers.end(); it++)
  symbolTable.push_back(it->second);
  
  return Napi::ObjectWrap<_exports_Abstract_inst>::DefineClass(env, "Abstract", symbolTable);
}

void _exports_Abstract_inst::GetMembers(
  Napi::Env env,
  std::map<std::string, _exports_Abstract_templ::PropertyDescriptor> &members,
  std::map<std::string, _exports_Abstract_templ::PropertyDescriptor> &staticMembers
  ) {
  std::map<std::string, SWIG_NAPI_ObjectWrap_templ<SWIG_NAPI_ObjectWrap_inst>::PropertyDescriptor> baseMembers, baseStaticMembers;
  SWIG_NAPI_ObjectWrap_inst::GetMembers(env, baseMembers, baseStaticMembers);
  members.insert(baseMembers.begin(), baseMembers.end());
  staticMembers.insert(staticMembers.begin(), staticMembers.end());
  
  /* register wrapper functions */
  // jsnapi_register_member_function
  members.erase("addGradidoTransaction");
  members.insert({
    "addGradidoTransaction",
      _exports_Abstract_templ::InstanceMethod("addGradidoTransaction",
        &_exports_Abstract_templ::_wrap_Abstract_addGradidoTransaction,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("findAll");
  members.insert({
    "findAll",
      _exports_Abstract_templ::InstanceMethod("findAll",
        &_exports_Abstract_templ::_wrap_Abstract__wrap_Abstract_findAll,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("findOne");
  members.insert({
    "findOne",
      _exports_Abstract_templ::InstanceMethod("findOne",
        &_exports_Abstract_templ::_wrap_Abstract__wrap_Abstract_findOne,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("findTimeoutedDeferredTransfersInRange");
  members.insert({
    "findTimeoutedDeferredTransfersInRange",
      _exports_Abstract_templ::InstanceMethod("findTimeoutedDeferredTransfersInRange",
        &_exports_Abstract_templ::_wrap_Abstract_findTimeoutedDeferredTransfersInRange,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("findRedeemedDeferredTransfersInRange");
  members.insert({
    "findRedeemedDeferredTransfersInRange",
      _exports_Abstract_templ::InstanceMethod("findRedeemedDeferredTransfersInRange",
        &_exports_Abstract_templ::_wrap_Abstract_findRedeemedDeferredTransfersInRange,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getAddressType");
  members.insert({
    "getAddressType",
      _exports_Abstract_templ::InstanceMethod("getAddressType",
        &_exports_Abstract_templ::_wrap_Abstract__wrap_Abstract_getAddressType,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getTransactionForId");
  members.insert({
    "getTransactionForId",
      _exports_Abstract_templ::InstanceMethod("getTransactionForId",
        &_exports_Abstract_templ::_wrap_Abstract_getTransactionForId,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("findByMessageId");
  members.insert({
    "findByMessageId",
      _exports_Abstract_templ::InstanceMethod("findByMessageId",
        &_exports_Abstract_templ::_wrap_Abstract__wrap_Abstract_findByMessageId,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getCommunityId");
  members.insert({
    "getCommunityId",
      _exports_Abstract_templ::InstanceMethod("getCommunityId",
        &_exports_Abstract_templ::_wrap_Abstract_getCommunityId,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  // jsnapi_register_member_function
  members.erase("getStartDate");
  members.insert({
    "getStartDate",
      _exports_Abstract_templ::InstanceMethod("getStartDate",
        &_exports_Abstract_templ::_wrap_Abstract_getStartDate,
        static_cast<napi_property_attributes>(napi_writable | napi_configurable))
    });
  
  /* add static class functions and variables */
  
  
#ifndef NAPI_CPP_EXCEPTIONS
  goto fail;
fail:
  return;
#endif
}

